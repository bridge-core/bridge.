{
    "animation": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:child_must_start_with": {
            "search": "animations",
            "start": "animation.",
            "error_message": "Animations must start with \"animation.<name>\"",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = `animation.${node.key}`;"
            }
        },
        "bridge:child_must_be_number": {
            "search": "timeline",
            "error_message": "Timeline attributes need to be a valid number.",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = String(Math.floor(Math.random() * 100000));"
            }
        }
    },
    "rp_animation": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:child_must_start_with": {
            "search": "animations",
            "start": "animation.",
            "error_message": "Animations must start with \"animation.<name>\"",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = `animation.${node.key}`;"
            }
        }
    },
    "animation_controller": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:child_must_start_with": {
            "search": "animation_controllers",
            "start": "controller.animation.",
            "error_message": "Animation controllers must start with \"controller.animation.<name>\"",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = `controller.animation.${node.key.split('.').pop()}`;"
            }
        }
    },
    "rp_animation_controller": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:child_must_start_with": {
            "search": "animation_controllers",
            "start": "controller.animation.",
            "error_message": "Animation controllers must start with \"controller.animation.<name>\"",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = `controller.animation.${node.key.split('.').pop()}`;"
            }
        }
    },
    "render_controller": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:child_must_start_with": {
            "search": "render_controllers",
            "start": "controller.render.",
            "error_message": "Render controllers must start with \"controller.render.<name>\"",
            "fix": {
                "type": "script",
                "run": "History('edit-key', node, node.key); node.key = `controller.render.${node.key}`;"
            }
        }
    },
    "entity": {
        "bridge:find_one": [
            {
                "is_warning": true,
                "search": "minecraft:behavior.send_event",
                "error_message": "minecraft:behavior.send_event is known to crash Minecraft"
            },
            {
                "is_warning": true,
                "search": "minecraft:spell_effects",
                "error_message": "minecraft:spell_effects is known to crash Minecraft if used inside of loops"
            }
        ],
        "bridge:two_incompatible": {
            "is_warning": true,
            "first": "minecraft:rideable",
            "second": "minecraft:spawn_entity",
            "error_message": "Entities being ridden cannot use minecraft:spawn_entity"
        },
        "bridge:first_needs_second": [
            {
                "first": "minecraft:addrider",
                "second": "minecraft:rideable",
                "error_message": "minecraft:addrider requires minecraft:rideable",
                "fix": {
                    "type": "snippet",
                    "name": "rideable_component",
                    "display_text": "Insert minecraft:rideable"
                }
            },
            {
                "first": "minecraft:behavior.open_door",
                "second": "can_open_doors",
                "error_message": "minecraft:behavior.open_door requires the mob to be able to path through doors"
            }
        ],
        "bridge:needs_both": [
            {
                "first": [ "minecraft:trade_table", "minecraft:economy_trade_table" ],
                "second": "minecraft:behavior.trade_with_player",
                "error_message": "$failure_name missing"
            },
            {
                "first": "minecraft:shooter",
                "second": "minecraft:behavior.ranged_attack",
                "error_message": "$failure_name missing"
            },
            {
                "first": "minecraft:can_power_jump",
                "second": "minecraft:horse.jump_strength",
                "error_message": "$failure_name missing"
            }
        ],
        "bridge:needs_three_if_both": [
            {
                "first": "minecraft:shooter",
                "second": "minecraft:behavior.ranged_attack",
                "third": "minecraft:behavior.nearest_attackable_target",
                "error_message": "$failure_name missing",
                "fix": {
                    "type": "snippet",
                    "name": "target_selection",
                    "display_text": "Insert minecraft:behavior.nearest_attackable_target"
                }
            },
            {
                "first": "minecraft:can_power_jump",
                "second": "minecraft:horse.jump_strength",
                "third": [ "minecraft:jump.dynamic", "minecraft:jump.static" ],
                "error_message": "$failure_name missing",
                "fix": {
                    "type": "script",
                    "run": "node.parent.buildFromObject({ 'minecraft:jump.static': {} }, undefined, true); Unsaved();",
                    "display_text": "Insert minecraft:jump.static"
                }
            }
        ],
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        },
        "bridge:event_check": {
            "error_message": "Unknown event"
        },
        "bridge:entity_group_check": {
            "error_message": "Unknown component group",
            "fix": {
                "type": "script",
                "run": "globalNode.get('minecraft:entity/component_groups').buildFromObject({ [node.data]: {} }); Unsaved();",
                "display_text": "Add component group"
            }
        },
        "bridge:animation_check": {
            "fix": {
                "type": "script",
                "run": "node.remove(undefined, true); Unsaved();",
                "display_text": "Remove reference"
            }
        },
        "bridge:behavior_check": {
            "is_warning": true,
            "error_message": "$failure_name missing"
        }
    },
    "spawn_rule": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        }
    },
    "recipe": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        }
    },
    "item": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        }
    },
    "block": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.12.0' }, undefined, true); Unsaved();"
            }
        }
    },
    "client_item": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        }
    },
    "client_entity": {
        "bridge:format_version_check": {
            "error_message": "\"format_version\" is required",
            "fix": {
                "type": "script",
                "run": "node.parent.buildFromObject({ format_version: '1.10.0' }, undefined, true); Unsaved();"
            }
        }
    }
}